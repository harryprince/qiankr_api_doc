define({  "name": "Qiankr Api Docs for Backend",  "version": "0.0.3",  "description": "Qiankr Api Docs for Backend Based on Tornado Restful-API Design and Apidoc",  "title": "千刻开发者文档",  "url": "http://api.qiankr.com/",  "sampleUrl": "http://api.qiankr.com/",  "header": {    "title": "开发者须知",    "content": "<!-- # Qiankr API Docs -->\n<!-- This docs is for font-end developer to build font-end service for qiankr. -->\n<!-- Auther:Harry Zhu Date:2015-07-26 -->\n<p><img src=\"https://raw.githubusercontent.com/harryprince/qiankrdocs/master/docs/img/qiankr_logo.jpeg\" alt=\"qiankr-logo\"></p>\n<h1>开发者声明</h1>\n<p>本文档为北京千刻科技维护，仅供开发者帮助开发千刻Web、App服务，非法用途者将追究相应责任。</p>\n<hr>\n<h1>一、千刻开发者API文档结构</h1>\n<p>千刻开发者API文档包括5个模块</p>\n<hr>\n<table>\n<thead>\n<tr>\n<th>No</th>\n<th>模块</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>用户验证模块</td>\n</tr>\n<tr>\n<td>2</td>\n<td>推荐系统模块</td>\n</tr>\n<tr>\n<td>3</td>\n<td>详情查看模块</td>\n</tr>\n<tr>\n<td>4</td>\n<td>内容编辑模块</td>\n</tr>\n<tr>\n<td>5</td>\n<td>社交消息模块</td>\n</tr>\n</tbody>\n</table>\n<p>其中2,3,4,5模块的功能需要用户登陆后查看，非注册用户只允许查看首页。</p>\n<hr>\n<p>具体功能：</p>\n<table>\n<thead>\n<tr>\n<th>事务/实体</th>\n<th>admin(A)</th>\n<th>user(B)</th>\n<th>album(A)</th>\n<th>event(B)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>初始化</td>\n<td>创建管理员</td>\n<td>注册</td>\n<td>创建专辑</td>\n<td>发布任务</td>\n</tr>\n<tr>\n<td>编辑</td>\n<td>*</td>\n<td>编辑个人信息</td>\n<td>编辑专辑信息</td>\n<td>编辑任务信息</td>\n</tr>\n<tr>\n<td>查看</td>\n<td>*</td>\n<td>个人、他人信息</td>\n<td>个人、他人专辑</td>\n<td>个人、他人图片</td>\n</tr>\n<tr>\n<td>推荐</td>\n<td>*</td>\n<td>优秀摄影师列表</td>\n<td>精选专辑列表</td>\n<td>任务列表</td>\n</tr>\n<tr>\n<td>图片</td>\n<td>*</td>\n<td>头像、背景图序列</td>\n<td>封面、图片序列</td>\n<td>封面、背景图序列、个人上传图片序列</td>\n</tr>\n<tr>\n<td>社交</td>\n<td>消息</td>\n<td>投诉、关注</td>\n<td>点赞、评论、转发、举报</td>\n<td>参与</td>\n</tr>\n</tbody>\n</table>\n<p>操作流：</p>\n<p>初始化--&gt;编辑--&gt;查看--&gt;推荐</p>\n<h2>主要数据结构采用NoSQL的KV模式，方便业务层弹性变动数据结构。</h2>\n<h1>二、图片操作逻辑</h1>\n<h2>图片上传</h2>\n<p>在图片上传前，前端需检验主体user_id的状态 和 客体entity_id的状态是否为available,才可以执行如下操作。</p>\n<ol>\n<li>前端--&gt;后端；访问接口/api/upload_token，提交若干参数（需登录）, 后端返回 图片地址 参数</li>\n<li>前端--&gt;七牛；前端根据七牛的上传规则，上传相应图片。</li>\n<li>前端--&gt;后端；前端将上传图片的相关信息写入后端数据库（POST到 /api/user 或者 /api/album 或者 /api/event）</li>\n</ol>\n<h3>上传场景</h3>\n<table>\n<thead>\n<tr>\n<th>场景</th>\n<th>用户</th>\n<th>专辑</th>\n<th>任务</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>主体：</td>\n<td>用户 user_id</td>\n<td>用户 user_id</td>\n<td>用户 user_id</td>\n</tr>\n<tr>\n<td>客体：</td>\n<td>用户资料 user_id</td>\n<td>专辑 album_id</td>\n<td>任务 event_id</td>\n</tr>\n<tr>\n<td>行为：</td>\n<td>上传头像、背景图 image_id</td>\n<td>上传若干照片 image_id</td>\n<td>上传一张图片 image_id</td>\n</tr>\n<tr>\n<td>接口地址：</td>\n<td>/api/edit/user</td>\n<td>/api/edit/album</td>\n<td>/api/normal/event</td>\n</tr>\n</tbody>\n</table>\n<p>主体 user_id 在登陆时获得；客体 entity_id  在初始化实体时获得</p>\n<h2>图片下载</h2>\n<ol>\n<li>前端--&gt;后端; 访问数据接口获取图片地址,隐含图片的所有者、版本信息,返回信息中还有image_status,控制图片的状态。\n所得数据将在<strong><em>大图模式</em></strong>中使用。</li>\n<li>前端--&gt;七牛；当image_status为available，前端根据七牛的下载策略，下载私有仓库中的图片。</li>\n</ol>\n<h2>图片命名规则</h2>\n<p>image_id =  user_id + entity_id + img_version_数字</p>\n<p>e.g.:image_id = fdbaf9d61f8148c38e62104fc9f1adda_3dfa2aab60fe433683ad564b47338b4c_img_version_1</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>解释</th>\n<th>例子</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>user_id</td>\n<td>(主体id)</td>\n<td>fdbaf9d61f8148c38e62104fc9f1adda</td>\n</tr>\n<tr>\n<td>entity_id</td>\n<td>(客体id)</td>\n<td>3dfa2aab60fe433683ad564b47338b4c</td>\n</tr>\n<tr>\n<td>img_version_数字</td>\n<td>(图片版本控制)</td>\n<td>img_version_1</td>\n</tr>\n</tbody>\n</table>\n<p>image_id 结合七牛服务生成 图片url</p>\n<p>e.g.图片url:http://qiankr.qiniudn.com/fdbaf9d61f8148c38e62104fc9f1adda_3dfa2aab60fe433683ad564b47338b4c_img_version_1</p>\n<hr>\n<h1>三、专辑创建逻辑</h1>\n<ol>\n<li>用户点击创建专辑，前端访问api/create/album初始化一个空专辑</li>\n<li>用户选取图片，前端访问api/upload_token 获取图片的上传token</li>\n<li>用户进入专辑专辑编辑页面，前端访问api/edit/album 确认提交编辑专辑细节，写入数据库</li>\n</ol>\n<hr>\n<h1>四、主编发布任务逻辑</h1>\n<hr>\n<h1>五、用户提交任务逻辑</h1>\n<ol>\n<li>用户点击参与任务后，暂不触发任何api</li>\n<li>用户确认提交图片 触发api/join 使得用户参与任务，在user、event的body中初始化数据；触发图片上传相关接口，再写入数据库</li>\n<li>若用户在参与过程中，中途取消提交图片 或 返回（暂时不参与任务）则不触任何api</li>\n<li>若用户已经上传图片，事后想要后悔，则选择删除照片，触发api/unjoin  使得用户取消参与任务，并将照片状态由available修改为 deleted</li>\n</ol>\n<hr>\n<h1>六、用户注册登陆操作逻辑</h1>\n<table>\n<thead>\n<tr>\n<th>No</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>功能</td>\n<td>手机注册</td>\n<td>密码忘记重置</td>\n<td>手机登陆</td>\n<td>微信Web登陆</td>\n<td>微博Web登陆</td>\n<td>微信App登陆</td>\n<td>微博App登陆</td>\n</tr>\n</tbody>\n</table>\n<h2>1. 手机注册（密码忘记重置类似）</h2>\n<ol>\n<li>用户需要正确填写符合格式的手机号，前端需要验证 符合手机号格式。</li>\n<li>用户点击发送验证码，调用短信验证api，若手机号已经注册将返回已注册错误。</li>\n<li>用户填写账号密码、验证码后提交注册。</li>\n<li>用户首次注册后可以之间调用登陆api，完成自动登陆。</li>\n<li>2.0版本暂无用户引导页设计。</li>\n</ol>\n<h2>2. 手机登陆</h2>\n<ol>\n<li>输入手机号码、密码</li>\n<li>点击登陆，若未注册则返回未注册错误，账号密码不一致返回不一致错误，否则成功登陆</li>\n<li>登陆成功根据user_id,生成登陆cookie</li>\n</ol>\n<h2>3. 第三方登陆（以微信Web登陆为例）</h2>\n<ol>\n<li>根据前端参数判断用户是否已经存在</li>\n<li>用户已经存在，根据wechat_uid直接生成登陆cookie</li>\n<li>用户未存在，创建用户，并生成登陆cookie</li>\n</ol>\n<h1>七、推荐系统</h1>\n<table>\n<thead>\n<tr>\n<th>推荐系统版本</th>\n<th>推荐系统功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>推荐系统1.0</td>\n<td>将采用基于知识的推荐系统。也就是后台主编将为用户精选优秀摄影师、专辑、任务等。</td>\n</tr>\n<tr>\n<td>推荐系统2.0</td>\n<td>随着内容的增加，推荐系统将增加分类筛选、搜索功能。</td>\n</tr>\n<tr>\n<td>推荐系统3.0</td>\n<td>将采用基于内容的推荐系统，通过作品内容已经用户静态特征数据为用户推荐。</td>\n</tr>\n<tr>\n<td>推荐系统4.0</td>\n<td>将采用基于协同过滤的推荐系统，通过用户的社交数据为用户推荐。</td>\n</tr>\n<tr>\n<td>推荐系统5.0</td>\n<td>将采用基于用户行为的推荐系统，通过用户的点击时序为用户推荐。</td>\n</tr>\n</tbody>\n</table>\n"  },  "footer": {    "title": "关于我们",    "content": "<h1>关于我们.</h1>\n<p>对于千刻开发者API文档如有疑问，请咨询：\nE-mail: junhui@qiankr.com\n我们将尽快解决您的疑问,期待您的开发过程愉快而顺利。</p>\n"  },  "template": {    "withCompare": true,    "withGenerator": true  },  "apidoc": "0.2.0",  "generator": {    "name": "apidoc",    "time": "2015-07-27T10:22:55.158Z",    "url": "http://apidocjs.com",    "version": "0.13.1"  }});